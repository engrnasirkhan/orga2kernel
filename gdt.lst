     1                                  %include "segments.mac"
     2                              <1> %define S.G  1h<<23+32
     3                              <1> %define S.D_B 1h<<22+32
     4                              <1> %define S.L 1h<<21+32
     5                              <1> %define S.AVL 0h
     6                              <1> %define S.P 1h<<15+32
     7                              <1> %define S.S 1h<<(12+32)
     8                              <1> %define S.TYPE(x) x<<40	
     9                              <1> %define S.DPL(x) x<<13+32
    10                              <1> %define S.LIMIT(x) ( (0xffff & x) | ((x & 0xf_0000)<<32) )
    11                              <1> 	
    12                              <1> %define S.BASE(x) (( x & 0xff00_0000 ) << 32 ) | 	(( x & 0x00ff_0000 ) << 16 ) | 	(( x & 0x0000_ffff ) << 16 )
    13                                  global GDT_DESC
    14                                  
    15                                  BEGIN_GDT:		
    16                                  ;; Primer segmento nulo
    17 00000000 0000000000000000        dq 0x0
    18                                  ;; segmento de codigo 0x8
    19 00000008 FFFF0000009BCF00        dq	S.BASE(0x0)| 	S.LIMIT(0xFFFFF) | 	S.TYPE(1011b) | 	S.G | 	S.D_B | 	S.P | 	S.S
    20                                  ;; segmento de datos 0x10
    21 00000010 FFFF00000093CF00        dq 	S.BASE(0x0) | 	S.LIMIT(0xFFFFF) | 	S.TYPE(0011b) | 	S.G | 	S.D_B | 	S.P | 	S.S
    22                                  ;; segmento de video 0x18
    23 00000018 9F0F00800B934000        dq 	S.BASE(0xb8000) | 	S.LIMIT( (25*80*2) - 1 ) | 	S.TYPE(0011b) | 	S.D_B | 	S.P | 	S.S
    24                                  	
    25                                  END_GDT:
    26                                  GDT_SIZE:	
    27 00000020 1F00                    GDT_DESC:	dw END_GDT-BEGIN_GDT-1
    28 00000022 [00000000]              		dd BEGIN_GDT
    29                                  
    30                                  		
    31                                  
    32                                  
    33                                  
    34                                  ;; begin_page_directory:
    35                                  ;; ;; |	   base | reserved  |pat|avl| g |ps | d | a |pcd|pwt|u/s|r/w| P |
    36                                  ;; ;;  00_0000_0000_0_0000_0000___0_000___1___0___0___0___0___1___0___1___1b
    37                                  ;; dd 0x10b + begin_page_table
    38                                  ;; end_page_directory:
    39                                  ;; times (4096 - (end_page_directory-begin_page_directory)) db 0x0
    40                                  
    41                                  ;; begin_page_table:
    42                                  ;; ;; mi kernel tiene 0x3040 bytes y arranca en 0x1200
    43                                  ;; ;; asi si hago identity mapping necesito paginar en la 
    44                                  ;; ;; tabla de paginas hasta 0x4240
    45                                  
    46                                  ;; ;; |	   base        base |pat|avl| g |ps | d | a |pcd|pwt|u/s|r/w| P |
    47                                  ;; ;;  00_0000_0000_0_0000_0000___0_000___1___0___0___0___0___1___0___1___1b
    48                                  
    49                                  ;; %assign i 0
    50                                  ;; %rep 6
    51                                  ;;      dd i<<12 | 0x0000010b
    52                                  ;;      %assign i i+1
    53                                  ;; %endrep
    54                                  ;; ;;ahora en 0x6000 tengo la memoria de video
    55                                  ;; dd 0xb8000 | 0x0000010b
    56                                  ;; end_page_table:
    57                                  ;; times (4096 - (end_page_table-begin_page_table)) db 0x0
    58                                  
